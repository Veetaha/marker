name: release
on:
  workflow_dispatch:
    inputs:
      version:
        required: false
        description:
          (Optional) Version to set for the release. If not specified, the latest
          numbered version found in the changelog will be used.
      dev-version:
        required: false
        description:
          (Optional) Version to set for the next development cycle. If not specified,
          then the `version` with the incremented minor will be used.

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # We need just the cargo executable to update the `Cargo.lock` file.
      # Github runners have `cargo` installed by default, so we don't even
      # need to download it. However, we need to remove the `rust-toolchain.toml`
      # so that `cargo` rustup proxy doesn't attempt to install the toolchain
      # pinned in this repo.
      - run: rm rust-toolchain.toml

      - id: version
        run: >
          echo "version=${{
              github.event.inputs.version || '$(scripts/release/get-version-from-changelog.sh)'
          }}"
          >> "$GITHUB_OUTPUT"
      - id: dev-version
        run: >
          echo "dev-version=${{
              github.event.inputs.dev-version || '$(scripts/release/get-next-dev-version.sh)'
          }}"
          >> "$GITHUB_OUTPUT"

      - run: |
          git config user.name "${{ github.actor }}"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      # Create a release commit and tag
      - run: scripts/release/set-version.sh ${{ steps.version.outputs.version }}
      - run: git commit --all --message "Release v${{ steps.version.outputs.version }}"
      - run: git tag v${{ steps.version.outputs.version }}"

      # Craete a next dev version commit
      - run: scripts/release/set-version.sh ${{ steps.dev-version.outputs.dev-version }}
      - run: git commit --all --message "Development v${{ steps.dev-version.outputs.dev-version }}"

      # Push the commits and tags
      - run: git push --atomic --follow-tags
